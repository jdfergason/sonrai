openapi: 3.0.0
info:
  description: |
    Sonrai API provides programmatic access to the sonrai data platform.
  version: "1.0.0"
  title: Sonrai
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/penny-vault/Sonrai/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: activity
    description: Details about recent activity
  - name: jobs
    description: Jobs create new data records in Sonrai
  - name: util
    description: Utility methods
paths:
  /healthz:
    get:
      tags:
        - util
      summary: Return health of service
      operationId: getHealth
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /activity:
    get:
      tags:
        - activity
      summary: Fetch recent activity
      operationId: listActivity
      parameters:
        - name: since
          in: query
          description: Earliest date to return activity from
          example: "2022-04-01T12:31:44Z"
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: page to retrieve
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: success
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '403':
          description: Not authorized
      security:
        - api_key: []
  /jobs:
    get:
      tags:
        - jobs
      summary: List all jobs
      description: Returns information for all configured jobs
      operationId: listJobs
      parameters:
        - name: page
          in: query
          description: page to retrieve
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: success
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/JobSummary'
        '400':
          description: Invalid ID supplied
        '404':
          description: Job not found
      security:
        - api_key: []
    put:
      tags:
        - jobs
      summary: Create a job
      operationId: createJob
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Not authorized
        '405':
          description: Invalid input
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
  '/job/{jobSlug}':
    get:
      tags:
        - jobs
      summary: Retrieve details of all jobs
      description: Returns the details of all jobs belonging to the user
      operationId: getJobById
      parameters:
        - name: jobSlug
          in: path
          description: ID of job to return
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Invalid ID supplied
        '404':
          description: Job not found
      security:
        - api_key: []
    put:
      tags:
        - jobs
      summary: Updates a job with new values
      operationId: updateJob
      parameters:
        - name: jobSlug
          in: path
          description: ID of job that needs to be updated
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '403':
          description: Not authorized
        '405':
          description: Invalid input
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
    delete:
      tags:
        - jobs
      summary: Deletes a job
      operationId: deleteJob
      parameters:
        - name: jobSlug
          in: path
          description: Job id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '400':
          description: Invalid ID supplied
        '403':
          description: Not authorized
        '404':
          description: Job not found
      security:
        - api_key: []
components:
  schemas:
    DataRecord:
      type: object
      properties:
        slug:
          type: string
          minLength: 3
          maxLength: 20
        volume:
          type: array
          items:
            $ref: '#/components/schemas/Metric'
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        kind:
          type: string
          enum: [create, update, delete, execute, alarm, error]
    Health:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
          enum: [success, error]
    JobSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          minLength: 3
          maxLength: 20
        name:
          type: string
        description:
          type: string
        lastRun:
          type: string
          format: date-time
        nextRun:
          type: string
          format: date-time
        records:
          type: array
          items:
            type: string
            minLength: 3
            maxLength: 20
        tags:
          type: array
          items:
            type: string
            minLength: 3
            maxLength: 20
    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
          description: a short, memorable name for this job
          minLength: 3
          maxLength: 20
        name:
          type: string
        description:
          type: string
        kind:
          type: string
          enum: [docker, executable]
        repository:
          type: string
          description: Repository where command may be retrieved. File stores are denoted with file://, docker repos are prefixed with docker://
        command:
          type: string
        arguments:
          type: array
          items:
            type: string
        environment:
          type: array
          items:
            type: object
            properties:
              name: 
                type: string
              value: 
                type: string             
        secrets:
          type: array
          items:
            type: string
        schedule:
          type: string
          format: cron
        lastRun:
          type: string
          format: date-time
        nextRun:
          type: string
          format: date-time
        recordTypes:
          type: array
          items:
            type: string
            minLength: 3
            maxLength: 20
        tags:
          type: array
          items:
            type: string
            minLength: 3
            maxLength: 20
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time

  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header